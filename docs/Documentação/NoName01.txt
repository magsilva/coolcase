Revisão

A análise de requisitos é uma das tarefas mais complicadas de um projeto, já que é a responsável em traduzir as necessidades dos usuários em um documento que servirá de guia para todas as subsequentes fases do desenvolvimento de um software. Como se não bastasse a dificuldade de traduzir os pensamentos em algo concreto, temos que conciliar as idéias de vários usuários. O ideal seria  ouvir a todos, filtrar todos esses dados e fazer algo que atenda o máximo de pessoas possiveis. Porém, na prática, isso é muito difícil e, por que não dizer, caro.

Felizmente, hoje tem-se um meio muito eficiente de alcançar um grande contigente de pessoas de maneira rápida e ágil a preços muito baixos: a Internet. Vários projetos tem sucesso utilizando desta: projetos free e/ou open-source. Na verdade, eles são um exemplo prático que os vários conceitos que aprendemos em processo de engenharia de software estão corretos: ciclos de desenvolvimento rápidos, interação com o usuário é tão íntima que podemos chamar o mesmo até de desenvolvedor.

Ainda assim, no entanto, temos problemas. Muitos desenvolvedores/usuários no mesmo projeto acabam gerando uma desordem que acaba por atrasar cronogramas, gerar conflitos de requisitos, etc. Informalmente, acaba-se gerando uma hierarquia, mas esta demora um certo tempo para se constituir. A sua aplicação, também, depende das pessoas envolvidas, o que muitas vezes a torna pouco eficiente. É observável a perda de foco de alguns projetos que acabam por se desfazer ou simplesmente serem abandonados.

Um meio para amenizar este problema seria a criação de uma qualificação das pessoas envolvidas. Desse modo, poderíamos descartar (ou deixar com baixa prioridade) os requisitos de uma pessoa ao mesmo tempo que os requisitos de alguém muito qualificado seria repassado imediatamente para uma análise mais detalhada. Apesar de não termos descartado nenhum requisitos, considerando aqueles mais relevantes permite que o desenvolvedor gaste menos tempo na aquisição de requisitos e se dedique mais a torná-los reais. Em ??? (REQAV), é proposto um modelo para descrição, qualificação, análise e validação de requisitos.

No entanto, ainda temos de resolver os conflitos entre os requisitos. Sabemos que uma simples mudança pode causar efeitos devastadores no projeto, por isso seria interessante termos alguma capacidade de previsão do que vai acontecer. Então, tendo em mãos os requisitos escolhidos com base no descrito no parágrafo anterior, poderíamos simular o que aconteceria com o sistema caso eles fossem inseridos no projeto, analisando o impacto deles no projeto e decidindo se tal modifição se faz necessária na atual versão do software.

Caso estejamos trabalhando com casos de uso na análise de requisitos, classificá-los de acordo com suas características tornaria a busca por casos de usos semelhantes bem mais rápida. conforme ??? (Uso de Patrones en la Construcción de Escenarios), isso pode ser feito e tem bons resultados.