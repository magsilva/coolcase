O formato ideal para a troca de dados em um sistema distribuído dever ser, aberto, gratuito, completo e expansível. Olhando as soluções diponíveis atualmente, percebe-se que XML é o meio para solucionar o problema. Ele possui todas as características acima, várias ferramentas são capazes de trabalhar com dados neste formato, é bem popular no mundo atual. No entanto, temos um grande problema: XML depende de um documento que diga o que os dados nele armazenados significa. Esse documento pode ser um DTD ou um XML Schema. Todos os programas que gerem arquivos XML devem concordar nos DTDs ou esquemas XML que serão utilizados, caso contrário podemos encontrar inconsistências que impedem a interoperabilidade dos dados entre os diversos sistemas.

Tomemos por exemplo o XMI. Ele é uma maneira de transformar os diagramas UML em documentos XML. Isso não é feito diferentamente, na verdade. Toma-se por base que a UML é definida por uma MOF. XMI transforma uma dada MOF em um DFD, ou seja, não é específico para UML, serve para qualquer coisa definida por uma MOF. A questão é que nem todas as empresas que trabalham com UML seguem o mesmo padrão, desenvolvendo sua própria UML. Aparentemente isso nem é notado pelo desenvolvedor, no entanto, quando trocando os dados entre aplicações, a dificuldade pode ser notada facilmente. Em um teste realizado em agosto de 2000, utilizando as ferramentas ArgoUML 0.8, Rational Rose 2000 com suporte a XMI, MagicDraw UML 3.6 e Together 4.0, observou-se que suportar ou não o XMI era inútil, porque os documentos produzidos eram, em sua grande maioria, incompatíveis entre as diversas ferramentas (foi possível ler um diagrama de caso de uso do Together 4.0 no Rational Rose, porém mesmo assim não foi 100% bem sucedido). Atualmente, temos grupos estudando tanto o XMI quanto a UML. Está se verificando que mesmo a UML possui inconsistências que não podiam ser mapeadas corretamente usando o XMI. Com o XMI 1.2 e a UML 1.4, provavelmente teremos uma situação melhor, mas a solução definitiva só será alcançada com o XMI 2.0 e a UML 2.0. Planeja-se reduzir a UML, simplificando-a a níveis que atendam a praticamente todos os requisitos que ela atualmente atende, ao mesmo tempo que tornando viável a utilização de uma UML comum por todos. Quem já teve a curiosidade de ler toda a especificação da UML e/ou ver os diagramas que representam sua estrutura com certeza concorda que uma simplificação é necessária.